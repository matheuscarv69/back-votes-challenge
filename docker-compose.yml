version: '3'

services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
    container_name: api-back-votes
    environment:
      SERVER_PORT: 8080
      DATABASE_URL: postgres:5432
      DATABASE_DB: "postgres"
      DATABASE_USER: postgres
      DATABASE_PASSWORD: password
      DATABASE_SCHEMA: backvotes
      KAFKA_HOST: kafka:9092
      DELAY_SCHELUDED_CHECK_SESSION: 10000
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres

  consumer-back-votes:
    image: matheuscarv69/kafka-consumer-back-votes-challenge
    container_name: consumer-back-votes
    environment:
      SERVER_PORT: 8081
      KAFKA_HOST: kafka:9092
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
      - api

  postgres:
    image: 'postgres:alpine'
    container_name: postgres_backvotes
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ZOO_PORT_NUMBER=2181
      - ZOO_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper